name: Build and Push Docker Image on Tag

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name"
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - linkstash-backend
          - linkstash-frontend

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Extract Docker tag and validate
    - name: Extract Docker tag
      id: extract-tag
      run: |
        TAG_NAME=${{ github.event.inputs.tag_name || github.ref_name }}
        if [[ $TAG_NAME =~ ^(.+)_v([0-9]+(\.[0-9]+){0,2}[a-zA-Z0-9-]*)$ ]]; then
          PROJECT_NAME="${BASH_REMATCH[1]}"
          VERSION="${BASH_REMATCH[2]}"
          echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "VALID_TAG=true" >> $GITHUB_ENV
        else
          echo "VALID_TAG=false" >> $GITHUB_ENV
        fi

    # Step 3: Get revision and created timestamp
    - name: Get revision and timestamp
      run: |
        echo "REVISION=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "CREATED_TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    # Step 4: Skip unrelated or invalid tags
    - name: Check tag validity and project match
      if: ${{ env.VALID_TAG == 'false' || env.PROJECT_NAME != matrix.project }}
      run: |
        echo "Skipping job. Either tag is invalid or does not match the project: ${{ matrix.project }}"
        exit 0

    # Step 5: Log in to DockerHub (only if the tag is valid and matches project)
    - name: Log in to DockerHub
      if: ${{ env.VALID_TAG == 'true' && env.PROJECT_NAME == matrix.project }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Build the Docker image (only if the tag is valid and matches project)
    - name: Build Docker image
      if: ${{ env.VALID_TAG == 'true' && env.PROJECT_NAME == matrix.project }}
      run: |
        docker build \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.project }}:${{ env.VERSION }} \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.project }}:latest \
          --label "org.opencontainers.image.created=${{ env.CREATED_TIMESTAMP }}" \
          --label "org.opencontainers.image.version=${{ env.VERSION }}" \
          --label "org.opencontainers.image.revision=${{ env.REVISION }}" \
          ./${{ matrix.project }}

    # Step 7: Push the Docker image (only if the tag is valid and matches project)
    - name: Push Docker image
      if: ${{ env.VALID_TAG == 'true' && env.PROJECT_NAME == matrix.project }}
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.project }}:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.project }}:latest
